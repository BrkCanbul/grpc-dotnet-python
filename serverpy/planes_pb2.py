# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: planes.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0cplanes.proto\"\x19\n\x0b\x64\x65lPlaneReq\x12\n\n\x02id\x18\x01 \x01(\x05\"!\n\x0b\x64\x65lPlaneRep\x12\x12\n\nrepMessage\x18\x01 \x01(\t\";\n\x0bPlaneAddReq\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0e\n\x06height\x18\x02 \x01(\x02\x12\x0e\n\x06weight\x18\x03 \x01(\x02\"#\n\x0cPlaneAddResp\x12\x13\n\x0brespMessage\x18\x01 \x01(\t\"\x1b\n\x0bGetPlaneReq\x12\x0c\n\x04name\x18\x01 \x01(\t\"<\n\x0cGetPlaneResp\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0e\n\x06height\x18\x02 \x01(\x02\x12\x0e\n\x06weight\x18\x03 \x01(\x02\x32\x90\x01\n\x05Plane\x12)\n\x08\x41\x64\x64Plane\x12\x0c.PlaneAddReq\x1a\r.PlaneAddResp\"\x00\x12/\n\x0cgetAllPlanes\x12\x0c.GetPlaneReq\x1a\r.GetPlaneResp\"\x00\x30\x01\x12+\n\x0b\x64\x65letePlane\x12\x0c.delPlaneReq\x1a\x0c.delPlaneRep\"\x00\x62\x06proto3')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'planes_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _DELPLANEREQ._serialized_start=16
  _DELPLANEREQ._serialized_end=41
  _DELPLANEREP._serialized_start=43
  _DELPLANEREP._serialized_end=76
  _PLANEADDREQ._serialized_start=78
  _PLANEADDREQ._serialized_end=137
  _PLANEADDRESP._serialized_start=139
  _PLANEADDRESP._serialized_end=174
  _GETPLANEREQ._serialized_start=176
  _GETPLANEREQ._serialized_end=203
  _GETPLANERESP._serialized_start=205
  _GETPLANERESP._serialized_end=265
  _PLANE._serialized_start=268
  _PLANE._serialized_end=412
# @@protoc_insertion_point(module_scope)
