# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import planes_pb2 as planes__pb2


class PlaneStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddPlane = channel.unary_unary(
                '/Plane/AddPlane',
                request_serializer=planes__pb2.PlaneAddReq.SerializeToString,
                response_deserializer=planes__pb2.PlaneAddResp.FromString,
                )
        self.getAllPlanes = channel.unary_stream(
                '/Plane/getAllPlanes',
                request_serializer=planes__pb2.GetPlaneReq.SerializeToString,
                response_deserializer=planes__pb2.GetPlaneResp.FromString,
                )
        self.deletePlane = channel.unary_unary(
                '/Plane/deletePlane',
                request_serializer=planes__pb2.delPlaneReq.SerializeToString,
                response_deserializer=planes__pb2.delPlaneRep.FromString,
                )


class PlaneServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AddPlane(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getAllPlanes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deletePlane(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PlaneServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddPlane': grpc.unary_unary_rpc_method_handler(
                    servicer.AddPlane,
                    request_deserializer=planes__pb2.PlaneAddReq.FromString,
                    response_serializer=planes__pb2.PlaneAddResp.SerializeToString,
            ),
            'getAllPlanes': grpc.unary_stream_rpc_method_handler(
                    servicer.getAllPlanes,
                    request_deserializer=planes__pb2.GetPlaneReq.FromString,
                    response_serializer=planes__pb2.GetPlaneResp.SerializeToString,
            ),
            'deletePlane': grpc.unary_unary_rpc_method_handler(
                    servicer.deletePlane,
                    request_deserializer=planes__pb2.delPlaneReq.FromString,
                    response_serializer=planes__pb2.delPlaneRep.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Plane', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Plane(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AddPlane(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Plane/AddPlane',
            planes__pb2.PlaneAddReq.SerializeToString,
            planes__pb2.PlaneAddResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getAllPlanes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/Plane/getAllPlanes',
            planes__pb2.GetPlaneReq.SerializeToString,
            planes__pb2.GetPlaneResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def deletePlane(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Plane/deletePlane',
            planes__pb2.delPlaneReq.SerializeToString,
            planes__pb2.delPlaneRep.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
